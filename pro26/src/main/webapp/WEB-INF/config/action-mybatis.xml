<?xml version="1.0" encoding="UTF-8"?>
<beans xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
       xmlns:tx="http://www.springframMultiActionControllerework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans">
       
<!-- locations = 1개이상의 값을 넣을 수 있음 -->
<bean id = "propertyPlaceholderConfigurer"
      class = "org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
  <property name ="locations">
  <value>/WEB-INF/config/jdbc.properties</value>
  </property>
</bean>
<!-- 외붚파일에 있는 디비를 끌어오기 -->
<bean id ="dataSource" 
      class ="org.apache.ibatis.datasource.pooled.PooledDataSource">
  <property name ="driver" value = "${jdbc.driverClassName}" />
  <property name ="url" value = "${jdbc.url}" />
  <property name ="username" value = "${jdbc.username}" />
  <property name ="password" value = "${jdbc.password}" />
</bean>
<!-- 디비에 직접적으로 들어가는 구문 그래서 ref으로 dataSource를 줌, configLocation -> MemberVO, 
mapperLocation 파일의 경로도 넣어주어야함 -->
<bean id = "sqlSessionFactory" 
      class = "org.mybatis.spring.SqlSessionFactoryBean">
      <property name ="dataSource" ref ="dataSource" />  <!-- id = dataSource 를 가져오기 -->
      <property name = "configLocation"
                value = "classpath:mybatis/model/modelConfig.xml" />
      <property name = "mapperLocations" 
                value = "classpath:mybatis/mappers/*.xml" />
</bean>
<!-- 직접적 실행할때만 열어주기 위해 
sqlSession 하나를 더 만듬 :자원이 계속 열려있으면 안되니까 
Template객체 안의 오픈소스를 사용해 작업하는 것임 sqlSessionFactory값을 가지고 있음
 (모두 다 가지고 있다!!->코드를 보면 알 수 있음) 
MemberDAOImpl에 선언! set이 @repository가 있기 때문에 @Auto로 대체 (짝꿍!! 중요!!)-->

<bean id ="sqlSession"
      class ="org.mybatis.spring.SqlSessionTemplate">
      <constructor-arg index="0" ref ="sqlSessionFactory"></constructor-arg>      
</bean>

<!-- <bean id = "memberDAO" 
      class = "com.spring.member.dao.MemberDAOImpl">
      <property name = "sqlSession" ref ="sqlSession"></property>
</bean> -->
<!-- memberDAO는 이 환경이 annotation하나로 끝남!  -->
</beans>

<!-- mybatis는 ibatis가 개선된 ~ 여긴 DB와 연동 -->